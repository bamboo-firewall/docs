---
- name: Build hosts file
  lineinfile:
    path: /etc/hosts
    line: '{{ ansible_ssh_host }} {{ name }}'
    create: true
  tags: update_hostname

- name: Set hostname 
  hostname:
    name: "{{ name }}"

- name: Update cache
  yum:
    update_cache: true

- name: Install wget
  yum:
    state: present
    name:
      - wget
      - yum-utils
      - device-mapper-persistent-data
      - lvm2

- name: Add repository
  shell: yum-config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
  args:
    creates: /etc/yum.repos.d/docker-ce.repo

- name: Get JQ
  shell: wget https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 -O jq

- name: Install JQ
  shell: chmod +x jq && mv jq /usr/local/bin

- name: Check if docker is running
  shell: ps aux | grep docker | grep -v grep
  ignore_errors: true
  changed_when: false
  register: service_docker_status

- name: Remove conflict packages
  shell: yum erase -y podman buildah

- name: Update package for OCI running properly
  shell: yum update libseccomp

- name: Install docker
  yum:
    state: present
    name: docker-ce
    allowerasing: yes

- name: Start Docker service
  service:
    name: docker
    state: started
    enabled: true
  when: service_docker_status.rc != 0

- name: Create directory
  file:
    path: /opt/{{ role_name }}/{{ item }}
    state: directory
  loop:
  - conf
  - ssl
  - bbfw

- name: Copy config file 
  copy:
    src: 'conf/{{ item }}'
    dest: '/opt/{{ role_name }}/conf/'
    owner: root
    group: root
    mode: 0644
  loop:
    - etcd1.conf
    - etcd2.conf
    - etcd3.conf

- name: Copy rule file 
  copy:
    src: bbfw/bbfw.tar.gz
    dest: /opt/{{ role_name }}/bbfw/
    owner: root
    group: root
    mode: 0644

- name: Extract rule to folder 
  unarchive:
    src: /opt/{{ role_name }}/bbfw/bbfw.tar.gz
    dest: /opt/{{ role_name }}/bbfw/
    owner: root
    group: root
    mode: 0600
    decrypt: True
    remote_src: True

- name: Absent example rule file bundle
  file:
    path: /opt/{{ role_name }}/bbfw/bbfw.tar.gz
    state: absent

- name: Update calicoctl admin file
  template:
    src: calicoctl.cfg.j2
    dest: /opt/{{ role_name }}/conf/calicoctl.cfg

- name: Copy ssl file 
  copy:
    content: "{{ item.file_var }}"
    dest: "/opt/{{ role_name }}/ssl/{{ item.file_name }}"
  with_items:
    - { file_var: "{{ ca_cert }}", file_name: ca.pem }
    - { file_var: "{{ cert }}", file_name: etcd.pem }
    - { file_var: "{{ key }}", file_name: etcd-key.pem }  

- name: Update docker-compose file
  template:
    src: docker-compose.yml.j2
    dest: /opt/{{ role_name }}/docker-compose.yml

- name: Pull lastest images
  shell: cd /opt/{{ role_name }}/ && docker compose pull 

- name: Up and run container
  shell: cd /opt/{{ role_name }}/ && docker compose down -v && docker compose up -d

- name: Check if login page is available and returning status 200
  uri:
    url: http://{{ ansible_ssh_host }}:3000/login
  register: result
  until: "result.status == 200"
  retries: 10
  delay: 5

- name: Info login to bamboofirewall
  vars:
    msg: |
      # ========================================= #
      #             Login information             #
      # ========================================= #
      # URL: http://{{ ansible_ssh_host }}:3000
      # Username: admin
      # Password: {{ admin_passwd }}
      # ========================================= #
  debug:
    msg: "{{ msg.split('\n') }}"
  run_once: True  
  until: "result.status == 200" 
